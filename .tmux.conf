
# Start windows and panes at 1, not 0
set -g base-index 1
set-option -g renumber-windows on

# don't rename windows automatically
set-option -g allow-rename off
# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# switch to windows using alt
bind -n 'M-1' select-window -t 1
bind -n 'M-2' select-window -t 2
bind -n 'M-3' select-window -t 3
bind -n 'M-4' select-window -t 4
bind -n 'M-5' select-window -t 5
bind -n 'M-6' select-window -t 6
bind -n 'M-7' select-window -t 7
bind -n 'M-8' select-window -t 8
bind -n 'M-9' select-window -t 9

# switch windows with ctrl p and n
bind -r C-p previous-window
bind -r C-n next-window

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Shift Alt vim keys to switch windows
bind -n M-H previous-window
bind -n M-L next-window

# Ctrl+Shift+Arrow to reorder windows
bind -n C-S-Left swap-window -t -1
bind -n C-S-Right swap-window -t +1

# Swap windows
# bind -r '<' swap-window -d -t '{previous}' # Move window left.
# bind -r '>' swap-window -d -t '{next}' # Move window right.

bind X confirm kill-window

#Changing bind for leader key
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix  # Change when

# set colors
set -s default-terminal "screen-256color"
set-option -g default-terminal "screen-256color"
set-option -sa terminal-overrides ",xterm*:Tc"

# to use arrow keys
set -g default-terminal "xterm-256color"
set-window-option -g xterm-keys on

set -g history-limit 50000  # Increase scrollback buffer size from 2000 to 50000 lines
set -g display-time 4000  # Increase tmux messages display duration from 750ms to 4s
set-option -g display-panes-time 3000 # Lengthen the amount of time status messages are displayed
set -g status-interval 5  # Refresh 'status-left' and 'status-right' more often, from every 15s to 5s
set -g status-keys emacs  # Emacs key bindings in tmux command prompt (prefix + :) are better than vi keys, even for vim users
set -g focus-events on  # Focus events enabled for terminals that support them
set -g aggressive-resize on  # Super useful when using "grouped sessions" and multi-monitor setup
set -g mouse on # Enable mouse control (clickable windows, panes, resizable panes)
set-option -g repeat-time 0 # Allow the arrow key to be used immediately after changing windows.
set -sg escape-time 290 # No delay for escape key press

bind C-l send-keys Escape 'C-l' 'i' # Clear pane
# bind C-l send-keys -R  # Clear pane
# bind tab last-window  # change prefix
# bind Space last-window  # change prefix
bind R source-file '/home/ishaan/.config/tmux/tmux.conf' \; display-message 'tmux.conf reloaded'  # Source conf

# vim binds while copying
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
unbind -T copy-mode-vi MouseDragEnd1Pane

# plugins
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-copycat'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @resurrect-capture-pane-contents 'on'
# set -g @continuum-restore 'on'
# run '~/.tmux/plugins/tpm/tpm'
set -g pane-base-index 1
set-window-option -g pane-base-index 1

# split panes using | and -
unbind '%'
bind | split-window -h -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
unbind '"'
bind - split-window -v -c "#{pane_current_path}"
bind h split-window -v -c "#{pane_current_path}"

# resize panes using vim keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# maximize a pane
bind -r m resize-pane -Z
bind -r z resize-pane -Z

# switch panes using Alt-arrow without prefix
# bind -n M-Left select-pane -L
# bind -n M-Right select-pane -R
# bind -n M-Up select-pane -U
# bind -n M-Down select-pane -D

# Alt+Shift+Arrow to resize panes
# bind -n M-S-Left resize-pane -L 5
# bind -n M-S-Right resize-pane -R 5
# bind -n M-S-Up resize-pane -U 5
# bind -n M-S-Down resize-pane -D 5

# Synchronize all panes in a window
bind C-s set-window-option synchronize-panes\; display-message "synchronize-panes toggled"


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"

bind-key -n 'C-h'  if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j'  if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k'  if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l'  if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
bind-key -n 'C-\' if-shell "$is_vim" 'send-keys C-\\\\'  'select-pane -l'
bind-key -n 'C-Left'  if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-Down'  if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-Up'  if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-Right'  if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Left' select-pane -L
bind-key -T copy-mode-vi 'C-Down' select-pane -D
bind-key -T copy-mode-vi 'C-UP' select-pane -U
bind-key -T copy-mode-vi 'C-Right' select-pane -R


bind > swap-pane -D  # swap current pane with the next one
bind < swap-pane -U  # swap current pane with the previous one
setw -g monitor-activity on # Change background color of a tab when activity occurs
setw -g monitor-silence 0 # Do NOT reset the color of the tab after activity stops occuring
setw -g monitor-bell off # Disable bell
set -g visual-activity off # Disable visual text box when activity occurs

# appearance colors
set -g status-right "#{?client_prefix,<Prefix>,}"
# set -g status-left "#S ï„‘"
set -g status-style fg=colour247,bg=colour236
set -g window-status-current-style fg=#eee8d5,bold,bg=#b58900
# Theme
# set-window-option -g window-status-current-style bold,bg=blue,fg=colour234
# set-window-option -g window-status-style fg=colour35
set -g window-status-activity-style bold,bg=colour234,fg=white
set-option -g message-style bg=colour237,fg=colour231
# set-option -g pane-border-style fg=colour36
# set-option -g pane-active-border-style fg=colour35

# Status Bar
set -g status-justify centre
set -g status-interval 60
set -g status-left-length 50

